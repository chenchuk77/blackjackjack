class Deck {

   static int SIZE;
   field Array cards;
   field int topCardIndex;

   // new shuffled deck with 52 cards.
   constructor Deck new() {
      let SIZE = 52;
      let cards = Array.new(SIZE);     // array of Cards
      do addCards();                   // set A23456789TJQK (13 cards * 4 suits)
      let cards = ArrayUtils.shuffle(cards, SIZE);
      let topCardIndex = 0;
      return this;
   }

   // show how many cards left in deck
   method int remainingCards(){
      return (SIZE - topCardIndex);
   }

   // deal the topmost card
   method Card deal(){
      var Card c;
      let c = cards[topCardIndex];
      let topCardIndex = topCardIndex + 1;
      return c;
   }

   // print deck
   method void showDeck() {
      var int i;
      var Card c;
      let i = 0;
      while (i < SIZE) {
         //do Sys.wait(100);
         let c = cards[i];
         do Output.printInt(i);do Output.printString(":");do Output.printInt(c.getValue());do Output.printString(c.getSuit());do Output.printString("...");
         let i = i + 1;
      }
      return;
   }

   // setting 52 cards, 13 of each
   method void addCards() {
      var int i;
      do Output.printString("setting cards...\n");
      let i = 0;
      while (i < 13) {
         let cards[i] = Card.new(i,"h");
         let i = i + 1;
      }
      while (i < 26) {
         let cards[i] = Card.new((i - 13),"d");
         let i = i + 1;
      }
      while (i < 39) {
         let cards[i] = Card.new((i - 26),"c");
         let i = i + 1;
      }
      while (i < 52) {
         let cards[i] = Card.new((i - 39) ,"s");
         let i = i + 1;
      }
         return;
   }
}
