// static utilityfunctions 
class ArrayUtils {

   static int seed;    // for Random

   // set a seed and pass to Random
   function void setSeed(int s) {
      let seed = s;
      do Random.seed(seed);
      return;
   }

   // clone array to a new array 
   function Array clone(Array source, int length) {
      var int i;
      var String object;               // using string but can be any object ???
      var Array dest;
      let dest = Array.new(length);    // array of Cards

      let i = 0 ;
      while (i < length) {             // applies Euclid's algorithm
         let object = source[i];
         let dest[i] = object;
         let i = i + 1;
      }
      return dest;
   }

   // randomize order of objects in array of size length
   function Array shuffle(Array source, int length){
      var Array dest;
      var Array temp;
      var String object;               // using string but can be any object ???

      var int random;
      var int lastIndex;
      var int destIndex;
      var int i;

      let temp = ArrayUtils.clone(source, length);
      let dest = Array.new(length);

      let lastIndex = length;
      let destIndex = 0;
      do Output.println();
      while (destIndex < length) { // 52 times
         // get object at random location
         let random = Random.between(0, lastIndex);
         let object = temp[random];
         // add object to dest array
         let dest[destIndex] = object;
         let destIndex = destIndex + 1;

         // handling the temp array, shrinking each random number
         let i = 0;
         while (i < lastIndex) {
            // shrink the array. for i<random, no need to change
            // if bigger, then x[i-1] = x[i]
            if (i > random) {
               let object = temp[i];
               let temp[i-1] = object;
            }
            let i = i + 1;
         }
         let lastIndex = lastIndex - 1;
      }
      return dest;
   }

}
